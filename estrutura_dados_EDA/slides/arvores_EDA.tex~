\begin{comment}
\documentclass[10pt,svgnames]{beamer}
\usepackage[portuguese]{babel} 
\usepackage[utf8]{inputenc}
\usepackage{amssymb,amsmath}
\usepackage{listings}
\usepackage{palatino}
\usepackage{beamerthemesplit}

\usetheme{Rochester}
\usecolortheme{dolphin}
 
\title{Árvores}
\author[DAD-II - Lucas H. Negri]{Lucas Hermann Negri}
\institute{Departamento de Ciência da Computação (DCC) \\ Centro de Ciências Tecnológicas (CCT)  \\ Universidade do Estado de Santa Catarina (UDESC)} 

\date{\today}

\def\hilite<#1>{
\temporal<#1>{\color{black}}{\color{blue}}
{\color{black}}}

\newenvironment{mitemize}{\begin{itemize} \itemsep=1cm}{\end{itemize}}

\begin{document} 

\frame{ \titlepage }

\frame{ \frametitle{Tópicos} \tableofcontents }
\end{comment}

%\section{Introdução}
\section{Árvores}
\frame{
    \frametitle{Definição}
    
    \begin{mitemize}
    \item Uma árvore é uma estrutura hierárquica composta por nós e ligações entre eles
    \item Pode ser vista como um grafo acíclico
    \item Cada nó possui somente um pai e zero ou mais filhos
    \end{mitemize}
}

\frame{
    \frametitle{Estrutura}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=2.5in]{res/arvore}
    \centering
    \caption{Exemplo de uma árvore}
    \end{figure}
}

\section{Árvore Binária de Busca}

\frame{
    \frametitle{Árvore Binária de Busca - Definição}
    
    Árvore onde cada nó possui até 2 filhos. O filho da esquerda só pode conter
    chaves menores do que a do pai, enquanto que o filho da direita só comporta chaves
    maiores do que a do pai.
}

\frame{
    \frametitle{Árvore Binária de Busca}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3in]{res/arvore_binaria_de_busca}
    \centering
    \caption{Exemplo de árvore binária de busca}
    \end{figure}
}

\begin{frame}
    \frametitle{Árvore Binária de Busca}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=4in]{res/no}
    \centering
    \caption{Estrutura básica / nó}
    \end{figure}

\end{frame}

\frame{
    \frametitle{Operações Básicas}
    
    \begin{block}{Operações Básicas}
    \begin{itemize}
    \item Inserção
    \item Busca
    \item Remoção
    \end{itemize}
    \end{block}
    
    \begin{block}{Usos Comuns}
    \begin{itemize}
    \item Dicionários / vetores associativos
    \item Filas de prioridades
    \end{itemize}
    \end{block}
}

\frame{
    \frametitle{Complexidade Computacional}
    
    Quando a árvore está balanceada todas as três operações podem ser implementadas com complexidade
    computacional igual a $O(\log n)$.
    \\ [2em]
    No pior caso (desbalanceamento) estas operações possuem complexidade $O(n)$~\cite{cormen}.
}

\begin{frame}[fragile]
\frametitle{Árvore Binária de Busca - Inserção}
\begin{verbatim}
INSERÇÃO(ARVORE, ITEM) {
    SE ITEM->CHAVE = ARVORE->CHAVE
        ARVORE->ITEM = ITEM
        return

    SE ITEM->CHAVE < ARVORE->CHAVE
        SE ARVORE->ESQ = NULO ENTÃO
            ARVORE->ESQ = ARVORE(ITEM)
        SENÃO
            INSERÇÃO(ARVORE->ESQ, ITEM)
    SENÃO
        SE ARVORE->DIR = NULO ENTÃO
            ARVORE->DIR = ARVORE(ITEM)
        SENÃO
            INSERÇÃO(ARVORE->DIR, ITEM)
}
\end{verbatim}
\end{frame}

\frame{
    \frametitle{Árvore Binária de Busca - Inserção}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3in]{res/insercao_1}
    \centering
    \caption{Exemplo de inserção da chave 40}
    \end{figure}
}

\frame{
    \frametitle{Árvore Binária de Busca - Inserção}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3in]{res/insercao_2}
    \centering
    \caption{Exemplo de inserção da chave 20}
    \end{figure}
}

\begin{frame}[fragile]
\frametitle{Árvore Binária de Busca - Busca}
\begin{verbatim}
BUSCA(ARVORE, CHAVE) {
    SE ARVORE = NULO
        return NULO
        
    SE ARVORE->CHAVE = CHAVE
        return ARVORE
    
    SE CHAVE < ARVORE->CHAVE
        return BUSCA(ARVORE->ESQ, CHAVE)
    SENÃO
        return BUSCA(ARVORE->DIR, CHAVE)
}
\end{verbatim}
\end{frame}

\frame{
    \frametitle{Árvore Binária de Busca - Remoção}
    
    A remoção de um nó se enquadra em um dos seguintes casos:
    
    \begin{enumerate}
    \item Remoção de um nó folha (nenhum filho)
    \item Remoção de um nó com somente um filho
    \item Remoção de um nó com dois filhos
    \end{enumerate}
    
    O tratamento de cada caso foi apresentado em sala de aula.
}

\section{Balanceamento}

\frame{
    \frametitle{Balanceamento}
    
    Uma árvore binária de busca balanceada garante operações de busca, inserção e
    remoção com complexidade O($\log n$), onde $n$ é o número de nós, o que a torna atrativa
    para diversas aplicações.
    \\[1em]
    Determinadas sequências de inserções ou remoções podem fazer com que uma ABB fique
    desbalanceada, tornando suas operações O($n$).
}

\begin{frame}[fragile]
\frametitle{Cálculo da Altura}
\begin{verbatim}
ALTURA(ARVORE) {
    SE ARVORE = NULO
        return -1
        
    A1 = ALTURA(ARVORE->DIR)
    A2 = ALTURA(ARVORE->ESQ)
    
    return maior(A1, A2) + 1
}
\end{verbatim}
\end{frame}

\begin{frame}
\frametitle{Cálculo da Altura}

\begin{figure}[tbp]
\includegraphics[keepaspectratio=true,width=3in]{res/altura1}
\centering
\caption{Exercício: determine a altura de cada subárvore.}
\end{figure}

\end{frame}

\begin{frame}
\frametitle{Cálculo da Altura}

\begin{figure}[tbp]
\includegraphics[keepaspectratio=true,width=3in]{res/altura2}
\centering
\caption{Resposta do exercício.}
\end{figure}

\end{frame}

\begin{frame}[fragile]
\frametitle{Cálculo do Fator de Balanceamento}
\begin{verbatim}
FB(ARVORE) {
    A1 = ALTURA(ARVORE->ESQ)
    A2 = ALTURA(ARVORE->DIR)
    return A1 - A2 
}
\end{verbatim}
\end{frame}

\frame{
    \frametitle{Balanceamento}
    
    \begin{mitemize}
    \item Uma ABB está balanceada quando cada nó possui um FB igual a -1, 0 ou 1
    \item Uma inserção ou remoção pode tornar uma árvore desbalanceada, necessitando de rotações
    para o seu balanceamento
    \end{mitemize}
}

\begin{frame}
    \frametitle{Exemplo de ABB Balanceada}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3in]{res/Balanceamento_Arvore}
    \centering
    \end{figure}
\end{frame}

\begin{frame}
    \frametitle{Exemplo de ABB Desbalanceada}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3in]{res/Arvore_Desbalanceada}
    \centering
    \end{figure}
\end{frame}

\subsection{Rotações}

\begin{frame}[fragile]
\frametitle{Operação de rotação}

\begin{verbatim}
ROTACAO_DIREITA(RAIZ) {
    PIVO      = RAIZ->ESQ
    RAIZ->ESQ = PIVO->DIR
    PIVO->DIR = RAIZ
    RAIZ      = PIVO
}
\end{verbatim}

\begin{verbatim}
ROTACAO_ESQUERDA(RAIZ) {
    PIVO      = RAIZ->DIR
    RAIZ->DIR = PIVO->ESQ
    PIVO->ESQ = RAIZ
    RAIZ      = PIVO
}
\end{verbatim}
\end{frame}

\begin{frame}
    \frametitle{Rotação para Direita}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=2.2in]{res/Balanceamento_Arvore2}
    \centering
    \end{figure}
\end{frame}

\begin{frame}
    \frametitle{Rotação para Direita}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Balanceamento_Arvore3}
    \centering
    \end{figure}
\end{frame}

\begin{frame}
    \frametitle{Rotação para Esquerda}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=2.2in]{res/Balanceamento_Arvore4}
    \centering
    \end{figure}
\end{frame}

\begin{frame}
    \frametitle{Rotação para Esquerda}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=2.2in]{res/Balanceamento_Arvore5}
    \centering
    \end{figure}
\end{frame}

\subsection{Árvores AVL}

\begin{frame}
    \frametitle{Árvores AVL}
    
    \begin{itemize}
    \item \textbf{AVL} desenvolvida por G. M. \textbf{A}delson-\textbf{V}elskii and E. M. \textbf{L}andis
    \item Garante o balanceamento da árvore ao realizar rotações após cada inserção ou remoção na ABB
    \end{itemize}
\end{frame}

\begin{frame}[fragile]
\frametitle{Balanceamento - Inserção}
\begin{verbatim}
BALANCEAMENTO(RAIZ) {
    SE FB(RAIZ) = -2 ENTÃO
        SE FB(RAIZ->DIR) = -1 ENTÃO
            ROTACAO_ESQUERDA(RAIZ)
        SENÃO
            ROTACAO_DIREITA(RAIZ->DIR)
            ROTACAO_ESQUERDA(RAIZ)
    SENÃO SE FB(RAIZ) = 2 ENTÃO
        SE FB(RAIZ->ESQ) = 1 ENTÃO
            ROTACAO_DIREITA(RAIZ)
        SENÃO
            ROTACAO_ESQUERDA(RAIZ->DIR)
            ROTACAO_DIREITA(RAIZ)
}
\end{verbatim}
\end{frame}

\begin{frame}[fragile]
\frametitle{Balanceamento - Inserção}

\begin{mitemize}
\item Para que a árvore tenha um bom desempenho, é essencial que o balanceamento seja
calculado eficientemente, isto é, sem a necessidade de percorrer toda a árvore após cada
modificação
\item Manter a árvore estritamente balanceada após cada modificação tem seu preço (desempenho).
Árvores AVL são utilizadas normalmente onde o número de consultas é muito maior do que o número de inserções
e remoções e quando a localidade de informação não é importante
\end{mitemize}
\end{frame}

\subsection{Árvore de Espalhamento}

\frame{
    \frametitle{Árvore de Espalhamento}
    
    \begin{mitemize}
    \item Reestrutura a árvore em cada operação de inserção, busca ou remoção por meio de operações de rotação
    \item Nome original: \emph{splay tree}~\cite{tarjan}. Não confundir com a Árvore N-Ária de Espalhamento (ANE) criada por professores da UDESC
    \end{mitemize}
}

\frame{
    \frametitle{Árvore de Espalhamento}
    
    \begin{mitemize}
    \item Evita a repetição de casos ruins [O(n)] devido ao seu rebalanceamento natural
    \item Não realiza o cálculo de fatores de balanceamento, simplificando sua implementação
    \item Pior caso para uma operação se mantém O(n), mas, ao considerar uma cadeia de operações,
    \emph{garante} uma complexidade amortizada de O($\log$n) para suas operações básicas
    \end{mitemize}
}

\frame{
    \frametitle{Árvore de Espalhamento}
    
    \begin{mitemize}
    \item Se baseia na operação de espalhamento, que utiliza rotações para mover uma determinada
    chave até a raiz
    \item A sua complexidade O($\log$ n) em uma análise amortizada é garantida pelas rotações efetuadas, o que
    a difere do uso simples de heurísticas como o \emph{mover para a raíz}
    \end{mitemize}
}

\frame{
    \frametitle{Exemplo - Espalhamento pela chave 1}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Espalhamento}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Operações Básicas}
    
    \begin{description}
    \item[Espalhamento] Move a chave desejada para a raiz por uma
    sequência bem definida de operações de rotação
    \item[Busca] Busca uma chave na árvore
    \item[Inserção] Insere uma nova chave na árvore
    \item[Remoção] Remove uma chave da árvore
    \end{description}
}

\frame{
    \frametitle{Operações Básicas}
    
    \begin{mitemize}
    \item Uma árvore de espalhamento é uma árvore binária de busca válida,
    logo operações como os percursos (pré-em-pós) são idênticas as operações
    em uma ABB
    \item As operações de inserção, busca e remoção podem ser definidas com base
    na operação de espalhamento
    \end{mitemize}
}

\begin{frame}[fragile]
\frametitle{Árvore de Espalhamento - Busca}
\begin{verbatim}
BUSCA(RAIZ, CHAVE) {
    return ESPALHAMENTO(RAIZ, CHAVE)
}
\end{verbatim}
\end{frame}

\begin{frame}[fragile]
\frametitle{Árvore de Espalhamento - Inserção}
\begin{verbatim}
INSERE(RAIZ, CHAVE) {
    INSERE_ABB(RAIZ, CHAVE)
    return ESPALHAMENTO(RAIZ, CHAVE)
}
\end{verbatim}
\end{frame}

\begin{frame}[fragile]
\frametitle{Árvore de Espalhamento - Remoção}
\begin{verbatim}
REMOVE(RAIZ, CHAVE) {
    RAIZ = ESPALHAMENTO(RAIZ, CHAVE)
    
    SE RAIZ->DIR ENTÃO
        AUX = ESPALHAMENTO(RAIZ->DIR, CHAVE)
        AUX->ESQ = RAIZ->ESQ
    SENÃO
        AUX = RAIZ->ESQ
    
    return AUX
}
\end{verbatim}
\end{frame}

\frame{
    \frametitle{Estratégias de Espalhamento}
    
    Duas estratégias:
    
    \begin{description}
    \item[Bottom-Up] Parte do nó acessado e o movimenta para a raiz da árvore por meio de rotações
    \item[Top-Down] Parte do nó raiz, rotacionando e \emph{removendo do caminho} os nós entre a raiz e o nó desejado, armazenando-os
    em duas árvores auxiliares, remontando a árvore completa na sua etapa final.
    \end{description}
}

\frame{
    \frametitle{Espalhamento Bottom-Up}
    
    \begin{mitemize}
    \item Na estratégia Bottom-Up, a operação de espalhamento realiza
    rotações subindo gradativamente de níveis, a partir da chave desejada
    \item Enquanto a chave não estiver na raiz, deve-se verificar qual o
    caso aplicável (ZIG, ZIG-ZIG ou ZIG-ZAG) e realizar as rotações necessárias
    \end{mitemize}
}

\frame{
    \frametitle{Caso 1: ZIG}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=4.5in]{res/Zig}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Caso 2: ZIG-ZIG}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=4in]{res/Zig-Zig}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Caso 3: ZIG-ZAG}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=4in]{res/Zig-Zag}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Espalhamento Top-Down}
    
    \begin{mitemize}
    \item Na estratégia Top-Down as chaves que estão no caminho da chave desejada
    para a raiz são rotacionadas e removidas para árvores auxiliares
    seguindo uma sequência de operações bem definidas
    \item Quando a chave desejada chega até a raiz, a árvore é remontada pelo
    retorno das chaves removidas
    \end{mitemize}
}

\frame{
    \frametitle{Exemplo: Top-Down 1/6}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Top-Down1}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Exemplo: Top-Down 2/6}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Top-Down2}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Exemplo: Top-Down 3/6}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Top-Down3}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Exemplo: Top-Down 4/6}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Top-Down4}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Exemplo: Top-Down 5/6}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Top-Down5}
    \centering
    \end{figure}
}

\frame{
    \frametitle{Exemplo: Top-Down 6/6}
    
    \begin{figure}[tbp]
    \includegraphics[keepaspectratio=true,width=3.5in]{res/Top-Down6}
    \centering
    \end{figure}
}

\begin{comment}
\section{Árvore B}

\bibliographystyle{unsrt}
\renewcommand\refname{Referências}

\frame{
    \frametitle{Referências}
    \bibliography{pres}
}

\end{comment}
