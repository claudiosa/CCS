Ponteiros

Revisao e  Aplicação

Suponha que precisamos de uma função que troque os valores de duas variáveis inteiras, digamos i e j.  É claro que a função

void troca (int i, int j) { // errado!
   int temp;
   temp = i; i = j; j = temp;
}
não produz o efeito desejado, pois recebe apenas os valores das variáveis e não as variáveis propriamente ditas.  A função recebe cópias das variáveis e troca os valores dessas cópias, enquanto as variáveis originais permanecem inalteradas.  Para obter o efeito desejado, é preciso passar à função os endereços das variáveis:

void troca (int *p, int *q)
{
   int temp;
   temp = *p; *p = *q; *q = temp;
}
Para aplicar essa função às variáveis i e j basta dizer

troca (&i, &j);
ou talvez

int *p, *q;
p = &i; q = &j;
troca (p, q);


Exercicio

1. Verifique que a troca de valores de variáveis discutida acima se poderia ser 
obtida por meio de uma macro do pré-processador:
#define troca (X, Y) { int t = X; X = Y; Y = t; }
. . . 
troca (i, j);
Por que o código abaixo está errado?
void troca (int *i, int *j) {
   int *temp;
   *temp = *i; *i = *j; *j = *temp;
}

2. Um ponteiro pode ser usado para dizer a uma função onde ela deve depositar o resultado de seus cálculos. Escreva uma função hm que converta minutos em horas-e-minutos. A função recebe um inteiro mnts e os endereços de duas variáveis inteiras, digamos h e m, e atribui valores a essas variáveis de modo que m seja menor que 60 e que 60*h + m seja igual a mnts.   Escreva também uma função main que use a função hm.

3. Escreva uma função mm que receba um vetor inteiro v[0..n-1] e os endereços de duas variáveis inteiras, digamos min e max, e deposite nessas variáveis o valor de um elemento mínimo e o valor de um elemento máximo do vetor.   Escreva também uma função main que use a função mm.
