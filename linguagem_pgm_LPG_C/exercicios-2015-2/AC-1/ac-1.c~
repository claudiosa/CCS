/* */
#include <stdio.h>
#define SIZE 41 // tamanho das populacao

/* 
   function prototypes 

*/

void print_Array( const char a[] );
//void inicializa_Array( const char array[] );
void inicializa_Array( char *a );
void copia_Array( char *origem , char *destino );
void evolui_Array( char *novo , char *temp );



/* function main begins program execution */
int main( void )
{
   char P_new[SIZE];
   char P_temp[SIZE];
/*
Chamar #2 em A1 e A2
Laço por n geracoes
	Chamar  #5 (Array_new A_2)
	Chamar #4 Copiar  Array_new -> A_2
        Chamar #3
fim_do_Laço
*/	
   int Geracoes =  50; // ler do teclado
   inicializa_Array( P_new );	
   print_Array( P_new );

for(n=0; n < Geracoes; n++)
  {
	  // Evolui FUNCAO
	  evolui_Array(P_new);
	  print_Array( P_new );
  }
	
	
   return 0; /* indicates successful termination */
} /* end main */

/* calculate average of all response values */
void inicializa_Array( char *pt_array )
{
   int j; /* counter for totaling array elements */
   
   /* preenchendo de - o array >>> rever */
   for ( j = 0; j < (SIZE-1); j++ ) {
      *(pt_array + j)  = '-';
   } 
  
   *(pt_array + (SIZE-1) ) = '\0'; // ULTIMA posicao
   *(pt_array + (SIZE/2) ) = '#';
   
   
} /* end function mean */


void evolui_Array(char *pt)
{
   char sub_3[4] = "";
   
   char *ancora;
   ancora = pt;
   
   int tamanho = size_str(pt);
   // cria string temporaria
   char str_temp[tamanho];
   
   
   for(i = 1; i < tamanho; i++)
   {
	 pega_subs( i , pt, sub_3);// CUIDAR AQUI
/*	   
	if (strcmp(name, "kevin")==0) {
    printf("hello");
}
else if (strcmp(name, "Laura")==0) {
    printf("Allo");
}
else if (strcmp(name, "Mike")==0) {
    printf("Good day");
}
else  {
    printf("Help!");
}
*/ 
	   switch(sub_3) // NAO FUNCIONA
	   {
		 case "_#_": 
		             faça isto ....
		             break;
		               
       }
       
       copia_Array(aux,pt);
  
return 1; // ao final de uma passada
}



/* output array contents (20 values per row) */
void print_Array( const char a[] )
{
   int j; /* counter */

   /* output array contents */
   for ( j = 0; a[ j ] != '\0' ; j++ ) 
   {
      printf( "%c", a[ j ] );
   } /* end for */
   printf( "\n %d caracteres impresso! -- comente depois " , j);
} /* end function printArray */


/**************************************************************/

  int size_str ( char *x )
        {
                int i;
                for (i = 0; *(x+i) != '\0' ; i++)
                return(i);
        }

