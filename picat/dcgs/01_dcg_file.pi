/*
Other examples of using DCGs can be seen at my Picat page (http://hakank.org/picat/ ,  search for "DCG"):. For example_
* Some DCG "utils"/general constructs: http://hakank.org/picat/dcg_utils.pi which is tested by http://hakank.org/picat/dcg_utilstest.pi

http://hakank.org/picat/dcg_utils.pi
*/
%import util.
main =>
    
    File = "01_inp_study.txt",
    Inp_Chars = read_file_chars(File),
    
    printf("\nContents of file: %s %n==>\n%s" , File, Inp_Chars),
    % Process to deal the input
    parse_file(Formated , Inp_Chars , [] ),
    print('\n=====================================\n'),
    printf("\n Modified: %n==>\n%w" , Formated),  
    print('\n=====================================\n'),
    print_L(Formated),
    print('END').
    
%%%%%
print_L(L) =>
    foreach (I in L)
        % writeln(I) %% print como string   
        print(I), nl
    end.


print_by_line(L) =>
    FD = open("saida.txt",write),
    foreach (I in L)
        %if (membchk('valve(IE)', I)) then
        print(I),
        write(FD,I),
        %end,
        nl,
        close(FD)
    end.


%%% DCG by HAKAN ...
%
% DCG for parsing the FLIGHTS
%

seq([])     --> [].
seq([E|Es]) --> [E], {E != ' '}, seq(Es).
%seq([E|Es]) --> [E], {not membchk(E," \n\t\r")} , seq(Es).
%seq([E|Es]) --> [E], {not many_of(" \n\t\r")} , seq(Es).
%seq([E|Es]) --> space, seq(Es).


% get and ignore many space characters -- HAKAN
space --> many_of(" \n\t\r").


% Maches many characters in CharList (no capture) -- HAKAN
many_of(CharList) -->  {membchk(C,CharList)}, many_of(CharList).
many_of(_CharList) --> [].

/*
space([E|Es]) --> {membchk(E," \n\t\r")}, space(Es).
space([])     --> [].

Picat> space(X,"   \n  \r", Y).
X = '[]'
Y = [' ',' ',' ','\n',' ',' ','\r']
yes
*/

%%%%%%% 
parse_file([Move|Moves]) --> parse_line(Move), "\n", parse_file(Moves).
parse_file([Move]) --> parse_line(Move).
parse_file([]) --> [].

parse_line([What,From,To]) --> "VOO: ", seq(What)," DE_ONDE: ", seq(From), " PARA: ", seq(To). 




/* ...........

Exercise 2:

:- [library(dcg/basics)].

courses([Course|Courses]) -->
    course(Course),
    courses(Courses), !.
courses([]) --> [].


.............. */
