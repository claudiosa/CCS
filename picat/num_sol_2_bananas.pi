%import util.
%import sat.
import cp.
%import mip.

main => 
    Num_Sol = 4,
    L_Sol = model( Num_Sol),
    printf("\n ==> %w", L_Sol).  
  

model(N) = L_Sol =>
   X = [Bananas, Oranges,Mangoes,Apples],
   X :: 1..100,

   3*Bananas*189 + 5*Oranges*135 + 7*Mangoes*105 + 9*Apples*315 #= 100*945,
   %TheSum #= Bananas+Apples, %%% MINIMIZATION
   sum(X) #= 100,
   solve_all([],X) = Solutions,
   printf("\n SOL: %w\n %w", X, Solutions).

 /*  
 L_Sol:=[],
   foreach(I in 1..N)
        solve(X),
        L_Sol := L_Sol++[X],
        printf("\n sol %d: %w\n %w", I,  X, L_Sol)
      
   end. 
*/
/*
Picat> L=[], L:=L++[1], L:=L++[2].
L = [1,2]
yes
*/

   %%%%  solve($[min(TheSum)], X) 
   %%% msg=0, print_level =1,
   %%%%solve($[cbc, limit(2)],X ) 
   %%% no tested for minimization

