% Soma de 0 + 1 + 2 + 3 + .... + N
main => soma_p1(7, X) , 
        printf("\n soma_P1: %d " , X) , 
        soma_p2(7, Y) , 
        printf("\n soma_P2: %d " , Y) .   

/* recursividade CLASSICA -- prolog like*/
soma_p1(0,S) ?=> S = 0.   % regra backtrackable
soma_p1( N, S ) => N > 0, %%% regra recursiva
                   Ant  =  (N - 1),
                   soma_p1( Ant , Parcial ),
                   S = (N + Parcial) . 

/* simplificada */
soma_p2(0,S) ?=> S = 0.
soma_p2(N,S) , N > 0 => 
             soma_p2( N-1 , Parcial ), 
             S = N + Parcial.