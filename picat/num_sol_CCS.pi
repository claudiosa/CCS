import sat.
import util. %%% lists ...

main =>
    Num_Sol = 10, 
    All = findall( [B,X,Y], model([B,X,Y]) ),
    take(All, Num_Sol) = List,
    printf("\n ==> %w", List).   

model([B,X,Y]) =>
    [X,Y] :: 0..20,
    B :: 0..1,
    B #<=> (X #= Y),
    solve([B,X,Y]).    



/*
Picat> X = findall(Y, a(Y)).
X = [1,2]
*/
index(-) 
a(1).
a(2).



    %M = $model(Z),
    %model([B,X,Y]),
    %call( M , [B,X,Y]),
    %writeln(Z).
    %writeln([B,X,Y]).
%   call($member(X), [1,2,3]).

%    fail.
   % findall([B,X,Y], (model([B,X,Y]), length(L) < 10), L),
/*
    foreach (I in 1..10)
        model([B,X,Y]),
        writeln([B,X,Y])
    end.
*/
