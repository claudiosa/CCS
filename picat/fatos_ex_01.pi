%%% FATOS ... = Prolog
index(-)      % these facts are not ordered
	nome(joao).
	nome(maria).
	nome(marcia).

index(-,-)     % these facts are not ordered
    idade_nome(18, joao).
    idade_nome(19, maria).
index(-,-)    
    pai(pedro, joao).
    pai(pedro, maria).
index(-,-,-)    
    idade_nome_sexo(18, joao, 'm').
    idade_nome_sexo(19, maria, 'f').
index(-,-,-,-,-)    
    dados(futebol, 18, joao, 'm', joinville).
    dados(natacao, 19, maria, 'f', blumenau).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
listar_nomes  ?=>     %%% this rule is backtrackable
          nome(X)                    ,   %% and
          printf("\n Nome: %w ", X)  ,   %% and
          false.

listar_nomes => 
          printf("\n ")  ,
          true. %% the final rule of above
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
listar_ida_nomes  ?=>    
          idade_nome(Y,X) ,  
          printf("\n Nome: %w  Idade: %w", X, Y)  , 
          false.

listar_ida_nomes => 
          printf("\n ")  ,
          true. %% the final rule of above
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
listar_dados  ?=>  
          dados(X1,X2,X3,X4,X5) ,
          %%dados(futebol, 18, joao, 'm', joinville).
          printf("\n Nome: %w  Idade: %d Sexo: %c Joga: %w Mora: %w", 
          X3, X2, X4, X1, X5),   
          false.

listar_dados => 
          printf("\n ")  ,
          true. %% the final rule of above

main => listar_nomes, 
        listar_ida_nomes,
        listar_dados.

/*
1. Ponto  final  no final da linha de regras er fatos 
2. Termos ou atomos: letras minusculas ... SEMPRE
3. Letras maiusculas = variaveis das outras Linguagens
4. A maquina anda de cima para baixo .... 
5.  Embora a ordem do codigo nao interessa
6.   :- do Prolog e agora ?=>
7.  Contudo so assim "=>" nao tem backtracking 
*/
